{"version":3,"sources":["src/functions/groupContacts.js","src/functions/asyncstorage.js","src/functions/getAllContacts.js","src/functions/sendNewContact.js","src/components/AddContactsModal.js","src/functions/searchContact.js","src/screens/Contacts.js","src/functions/responsive.js","src/components/ContactsHeaderRight.js","src/functions/getContactDetails.js","src/functions/deleteContact.js","src/components/ContactDetailsEdit.js","src/screens/ContactDetails.js","src/functions/updateContact.js","src/components/ContactDetailsHeaderRight.js","src/components/ContactDetailsHeaderLeft.js","src/functions/getRandomId.js","src/functions/sendNewUser.js","config.js","App.js","index.js"],"names":["isLetter","str","length","match","groupContacts","contacts","console","log","contactsSorted","sort","a","b","name","toLowerCase","map","forEach","val","Object","keys","includes","toUpperCase","push","getData","key","value","AsyncStorage","getItem","JSON","parse","e","setData","jsonValue","stringify","setItem","removeItem","getAllContacts","res","setContacts","setIsContactsLoaded","myHeaders","Headers","append","userid","raw","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","company","phones","mails","address","user","emails","addresses","AddContactsModal","visible","onDismiss","React","useState","setName","setCompany","phoneList","setPhoneList","mailList","setMailList","addressList","setAddressList","phoneListLength","setPhoneListLength","mailListLength","setMailListLength","addressListLength","setAddressListLength","toast","useToast","Portal","Modal","contentContainerStyle","flex","backgroundColor","justifyContent","alignItems","flexDirection","View","style","width","marginTop","Button","labelStyle","fontSize","color","onPress","fontWeight","sendNewContact","error","errorString","reason","show","type","placement","duration","offset","swipeEnabled","animationType","paddingHorizontal","TextInput","height","placeholder","onChangeText","text","Divider","minWidth","Array","phone","i","IconButton","icon","iconColor","size","marginLeft","marginRight","splice","keyboardType","TouchableOpacity","setContact","ContactsScreen","uid","searchQuery","setSearchQuery","isContactsLoaded","navigation","useNavigation","useEffect","Searchbar","marginHorizontal","Dimensions","get","borderRadius","placeholderTextColor","query","searchContact","marginVertical","ScrollView","marginBottom","Text","contact","borderWidth","ActivityIndicator","animating","alignSelf","MD2Colors","red800","ContactsHeaderRight","showModal","getContactDetails","ContactDetailsEdit","list","mail","addrss","paddingTop","paddingBottom","deleteContact","goBack","ContactDetailsScreen","editMode","setEditMode","route","useRoute","params","useLayoutEffect","Title","padding","newContact","oldName","ContactDetailsHeaderRight","updateContact","ContactDetailsHeaderLeft","getRandomId","setuid","sendNewUser","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Stack","createNativeStackNavigator","setGotid","_id","registerRootComponent","app","initializeApp","getAnalytics","setVisible","gotid","hideModal","setList","getuid","Provider","NavigationContainer","Navigator","screenOptions","headerBackgroundColor","headerShadowVisible","Screen","children","props","options","headerRight","headerTitleAlign","headerTitleStyle","headerTitle","headerStyle","headerLeft"],"mappings":"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","file":"static/js/app.da8e1620.chunk.js","sourcesContent":["function isLetter(str) {\r\n    return str.length === 1 && str.match(/[a-z]/i);\r\n}\r\n\r\nexport function groupContacts(contacts = []) {\r\n    console.log(contacts)\r\n    var contactsSorted = contacts.sort(function (a, b) {\r\n        a = a.name.toLowerCase();\r\n        b = b.name.toLowerCase();\r\n        if (a < b) {\r\n            return -1;\r\n        }\r\n        if (b > a) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n    var map = {\r\n        \"*\":[]\r\n    };\r\n    contactsSorted.forEach((val) => {\r\n        if(isLetter(val.name[0])) {\r\n            if(!Object.keys(map).includes(val.name[0].toUpperCase())) map[val.name[0].toUpperCase()] = [];\r\n            map[val.name[0].toUpperCase()].push(val);\r\n        } else {\r\n            map[\"*\"].push(val)\r\n        }\r\n    })\r\n    return map;\r\n}","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const getData = async (key) => {\r\n    try {\r\n      const value = await AsyncStorage.getItem(key)\r\n      return value != null ? JSON.parse(value) : null\r\n    } catch(e) {\r\n      console.log(e)\r\n    }\r\n}\r\n\r\nexport const setData = async (key,value) => {\r\n  try {\r\n    const jsonValue = JSON.stringify(value)\r\n    await AsyncStorage.setItem(key, jsonValue)\r\n  } catch(e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const clearData = async (key) => {\r\n  try {\r\n    await AsyncStorage.removeItem(key)\r\n  } catch(e) {\r\n    console.log(e)\r\n  }\r\n}\r\n","import { groupContacts } from './groupContacts';\r\nimport { getData } from './asyncstorage';\r\n\r\nexport default async function getAllContacts(setContacts = (value) => {}, setIsContactsLoaded = (value) => {}) {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var res;\r\n    var userid = await getData(\"uid\");\r\n\r\n    var raw = JSON.stringify(\r\n    {\r\n        \"userid\":userid\r\n    }\r\n    );\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/contact/getallcontacts\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result;\r\n    })\r\n    var contacts = groupContacts(res);\r\n    setContacts(contacts);\r\n    setIsContactsLoaded(true);\r\n}","import { getData } from './asyncstorage';\r\n\r\nexport default async function sendNewContact(name,company,phones,mails,address) {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var res;\r\n    var userid = await getData(\"uid\");\r\n\r\n    var raw = JSON.stringify(\r\n        {\r\n            user: userid,\r\n            phones:phones,\r\n            emails:mails,\r\n            company:company,\r\n            name:name,\r\n            addresses:address\r\n        }\r\n    );\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/contact/addContact\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result\r\n    })\r\n    return res;\r\n}\r\n","import React from 'react';\r\nimport { View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { Text, Modal, Portal, Button, Divider, IconButton } from 'react-native-paper';\r\nimport sendNewContact from '../functions/sendNewContact';\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport getAllContacts from '../functions/getAllContacts';\r\n\r\n\r\nexport function AddContactsModal({visible, onDismiss, setContacts}) {\r\n    const [name,setName] = React.useState(\"\")\r\n    const [company,setCompany] = React.useState(\"\")\r\n\r\n    const [phoneList, setPhoneList] = React.useState([\"\"])\r\n    const [mailList, setMailList] = React.useState([])\r\n    const [addressList, setAddressList] = React.useState([\"\"])\r\n\r\n    const [phoneListLength, setPhoneListLength] = React.useState(1)\r\n    const [mailListLength, setMailListLength] = React.useState(0)\r\n    const [addressListLength, setAddressListLength] = React.useState(1)\r\n\r\n    const toast = useToast();\r\n    return(\r\n        <Portal>\r\n        <Modal visible={visible} onDismiss={onDismiss} contentContainerStyle={{flex:1,backgroundColor:\"#F3F2F7\",justifyContent:\"flex-start\",alignItems:\"baseline\",flexDirection:\"column\"}}>\r\n            <View style={{flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\",marginTop:10}}>\r\n                <Button labelStyle={{fontSize:20, color:\"#117CDE\"}} onPress={() => {onDismiss()}}>Cancel</Button>\r\n                <Text style={{fontSize:25, fontWeight:\"bold\"}}>New Contact</Text>\r\n                <Button labelStyle={{fontSize:20, color:\"#117CDE\"}}  onPress={async () => {\r\n                    var result = await sendNewContact(name,company,phoneList,mailList,addressList);\r\n                    if(result.error == true) {\r\n                        var errorString = \"\";\r\n                        result.reason.forEach(reason => {\r\n                            errorString += reason + \"\\n\"\r\n                        })\r\n                        toast.show(\"Error!\\n\\n\"+errorString, {\r\n                            type: \"danger\",\r\n                            placement: \"top\",\r\n                            duration: 2000,\r\n                            offset: 150,\r\n                            swipeEnabled:true,\r\n                            animationType: \"slide-in\",\r\n                        });\r\n                    } else {\r\n                        getAllContacts(setContacts)\r\n                        onDismiss();\r\n                    }\r\n                    //burda direk api ye göndericez api den gelen cevapta error false ise devam edecek değil ise hata vericez\r\n                }}>Done</Button>\r\n            </View>\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100vw\"}}>\r\n                <TextInput style={{height:50,width:\"100%\"}} placeholder={\"Name\"} onChangeText={(text) => {setName(text)}} />\r\n                <Divider />\r\n                <TextInput style={{height:50,minWidth:\"100%\"}} placeholder={\"Company\"} onChangeText={(text) => setCompany(text)} />\r\n            </View>\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100%\"}}>\r\n                {[...Array(phoneListLength)].map((phone,i) => {\r\n                    return <View style={{flexDirection:\"row\",alignItems:\"center\",height:45}}>\r\n                    {\r\n                    (phoneListLength != 1) ? \r\n                    <IconButton\r\n                        icon={\"minus\"}\r\n                        iconColor=\"white\"\r\n                        size={20}\r\n                        style={{height:20,marginLeft:-3,marginRight:5,backgroundColor:\"red\",width:20}}\r\n                        onPress={() => {\r\n                            var phones = phoneList;\r\n                            phones.splice(i,1);\r\n                            setPhoneListLength(phoneListLength-1)\r\n                            setPhoneList(phones)\r\n                            console.log(phoneList)\r\n\r\n                        }}\r\n                    />  : null\r\n                    }\r\n                    <TextInput keyboardType='numeric' style={{height:50,minWidth:\"100%\"}} placeholder={\"Phone\"} onChangeText={(text) => {\r\n                        var phones = phoneList;\r\n                        phones[i] = text;\r\n                        setPhoneList(phones)\r\n                    }} />\r\n                    </View>\r\n                })}\r\n                <Divider style={{height:1}}/>\r\n                <TouchableOpacity style={{flexDirection:\"row\",alignItems:\"center\",height:45}} \r\n                onPress={() => {\r\n                    setPhoneListLength(phoneListLength+1)\r\n                }}\r\n                >\r\n                <IconButton\r\n                    icon={\"plus\"}\r\n                    iconColor=\"white\"\r\n                    size={20}\r\n                    style={{height:20,marginLeft:-3,backgroundColor:\"limegreen\",width:20}}\r\n                />\r\n                <Text>Add Phone</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100%\"}}>\r\n                {[...Array(mailListLength)].map((phone,i) => {\r\n                    return <View style={{flexDirection:\"row\",alignItems:\"center\",height:45}}>\r\n                    <IconButton\r\n                        icon={\"minus\"}\r\n                        iconColor=\"white\"\r\n                        size={20}\r\n                        style={{height:20,marginLeft:-3,marginRight:5,backgroundColor:\"red\",width:20}}\r\n                        onPress={() => {\r\n                            var mails = mailList;\r\n                            mails.splice(i,1);\r\n                            setMailListLength(mailListLength-1)\r\n                            setMailList(mails)\r\n                        }}\r\n                    />\r\n                    <TextInput keyboardType='email-address' style={{height:50,minWidth:\"100%\"}} placeholder={\"Mail\"} onChangeText={(text) => {\r\n                        var mails = mailList;\r\n                        mails[i] = text;\r\n                        setMailList(mails);\r\n                    }} />\r\n                <Divider />\r\n                    </View>\r\n                })}\r\n                {mailListLength != 0 ? <Divider style={{height:1}}/> : null}\r\n                <TouchableOpacity style={{flexDirection:\"row\",alignItems:\"center\",height:45}} \r\n                onPress={() => {\r\n                    setMailListLength(mailListLength+1)\r\n                }}\r\n                >\r\n                <IconButton\r\n                    icon={\"plus\"}\r\n                    iconColor=\"white\"\r\n                    size={20}\r\n                    style={{height:20,marginLeft:-3,backgroundColor:\"limegreen\",width:20}}\r\n                />\r\n                <Text>Add Mail</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100%\"}}>\r\n                {[...Array(addressListLength)].map((phone,i) => {\r\n                    return <View style={{flexDirection:\"row\",alignItems:\"center\",height:45}}>\r\n                    {\r\n                    (addressListLength != 1) ? \r\n                    <IconButton\r\n                        icon={\"minus\"}\r\n                        iconColor=\"white\"\r\n                        size={20}\r\n                        style={{height:20,marginLeft:-3,marginRight:5,backgroundColor:\"red\",width:20}}\r\n                        onPress={() => {\r\n                            var address = addressList;\r\n                            address.splice(i,1);\r\n                            setAddressListLength(addressListLength-1)\r\n                            setAddressList(address)\r\n                            }}\r\n                    />  : null\r\n                    }\r\n                    <TextInput style={{height:50,minWidth:\"100%\"}} placeholder={\"Address\"} onChangeText={(text) => {\r\n                        var address = addressList;\r\n                        address[i] = text;\r\n                        setAddressList(address)\r\n                    }} />\r\n                <Divider />\r\n                    </View>\r\n                })}\r\n                {addressListLength != 0 ? <Divider style={{height:1}}/> : null}\r\n                <TouchableOpacity style={{flexDirection:\"row\",alignItems:\"center\",height:45}} \r\n                onPress={() => {\r\n                    setAddressListLength(addressListLength+1)\r\n                }}\r\n                >\r\n                <IconButton\r\n                    icon={\"plus\"}\r\n                    iconColor=\"white\"\r\n                    size={20}\r\n                    style={{height:20,marginLeft:-3,backgroundColor:\"limegreen\",width:20}}\r\n                />\r\n                <Text>Add Address</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n        </Modal>\r\n        </Portal>\r\n    )\r\n}","import { groupContacts } from './groupContacts';\r\nimport { getData } from './asyncstorage';\r\n\r\nexport default async function searchContact(setContact = (value) => {},text = \"\") {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var res;\r\n    var userid = await getData(\"uid\");\r\n\r\n    var raw = JSON.stringify(\r\n    {\r\n        \"userid\": userid,\r\n        \"text\":text\r\n    }\r\n    );\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/contact/searchcontacts\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result;\r\n    })\r\n    var contacts = groupContacts(res);\r\n    setContact(contacts);\r\n}","import React from 'react';\r\nimport { ScrollView, Text, TouchableOpacity, View } from 'react-native';\r\nimport { Divider, Searchbar } from 'react-native-paper';\r\nimport { responsiveHeight } from '../functions/responsive';\r\nimport { ActivityIndicator, MD2Colors } from 'react-native-paper';\r\nimport getAllContacts from '../functions/getAllContacts.js'\r\nimport { AddContactsModal } from '../components/AddContactsModal';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport searchContact from '../functions/searchContact';\r\n\r\nexport function ContactsScreen({visible,onDismiss, contacts, setContacts,uid}) {\r\n    const [searchQuery, setSearchQuery] = React.useState('');\r\n    const [isContactsLoaded, setIsContactsLoaded] = React.useState(false);\r\n    const onChangeSearch = query => {\r\n        setSearchQuery(query);\r\n        searchContact(setContacts,query)\r\n    }\r\n\r\n    const navigation = useNavigation();\r\n\r\n    React.useEffect(() => {\r\n        getAllContacts(setContacts,setIsContactsLoaded)\r\n    }, []);\r\n\r\n    return (\r\n    (!isContactsLoaded && uid != null) ?\r\n    <View style={{ flex:1, justifyContent:\"center\" ,alignItems:\"center\", }}>\r\n        <ActivityIndicator animating={true} style={{alignSelf:\"center\"}} color={MD2Colors.red800} />\r\n    </View>\r\n    :\r\n    <View style={{ flex: 1, backgroundColor: \"#FFF\" }}>\r\n        <AddContactsModal setContacts={setContacts} visible={visible} onDismiss={onDismiss}/>\r\n        <Searchbar\r\n            style={{\r\n                marginHorizontal:20,\r\n                height:responsiveHeight(45),\r\n                borderRadius:10,\r\n            }}\r\n            placeholderTextColor=\"grey\"\r\n            placeholder=\"Search\"\r\n            onChangeText={onChangeSearch}\r\n            value={searchQuery}\r\n        />\r\n        <Divider style={{marginVertical:17,marginHorizontal:17.5}}/>\r\n        <ScrollView>\r\n        {Object.keys(contacts).map(key => {\r\n            if(contacts[key].length && contacts[key].length != 0)\r\n            return (\r\n                <View key={\"view\" + key} style={{marginBottom:15}}>\r\n                    <Text key={key} style={{marginHorizontal:18, color:\"grey\",fontSize:18}}>{key}</Text>\r\n                    {contacts[key].map((contact) => {\r\n                        return (\r\n                            <View key={\"view\"+contact.name} style={{marginHorizontal:17.5}}>\r\n                                <Divider key={\"div\"+contact.name} style={{marginVertical:5,borderWidth:0.2}}/>\r\n                                <TouchableOpacity key={\"to\"+contact.name} style={{flex:1}}\r\n                                onPress={() => {\r\n                                    navigation.push(\"ContactDetails\",{\r\n                                        name:contact.name,\r\n                                    })\r\n                                }}\r\n                                >\r\n                                    <Text key={contact.name}>{contact.name}</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        )\r\n                    })}\r\n                </View>\r\n            )\r\n        })}\r\n        </ScrollView>\r\n    </View>\r\n    );\r\n  }\r\n\r\n/*\r\ncontacts[key].map((value) => {\r\n    return <Text>{JSON.stringify(value)}</Text>\r\n})\r\n*/\r\n\r\n\r\n ","import React from \"react\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\nconst heightMobileUI = 851;\r\nconst widthMobileUI = 393;\r\n\r\nexport const responsiveWidth = width => {\r\n    return (Dimensions.get('window').width * width) / widthMobileUI;\r\n  };\r\n  \r\nexport const responsiveHeight = height => {\r\n    return (Dimensions.get('window').height * height) / heightMobileUI;\r\n};","import React from 'react';\r\nimport { IconButton } from 'react-native-paper';\r\n\r\nexport function ContactsHeaderRight({showModal}) {\r\n    return (\r\n            <IconButton\r\n                icon={\"plus\"}\r\n                onPress={() => {showModal()}}\r\n                size={30}\r\n                iconColor={\"#117CDE\"}\r\n            />\r\n    )\r\n}","import { groupContacts } from './groupContacts';\r\nimport { getData } from './asyncstorage';\r\n\r\nexport default async function getContactDetails(setContact = (value) => {}, setIsContactsLoaded = (value) => {},name = \"\") {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var res;\r\n    var userid = await getData(\"uid\");\r\n\r\n    var raw = JSON.stringify(\r\n    {\r\n        \"userid\": userid,\r\n        \"name\":name\r\n    }\r\n    );\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/contact/getcontact\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result;\r\n    })\r\n    setContact(res[0]);\r\n    setIsContactsLoaded(true);\r\n    console.log(res[0])\r\n}","import getAllContacts from \"./getAllContacts\";\r\nimport { getData } from './asyncstorage';\r\n\r\n\r\nexport default async function deleteContact(name,setContacts) {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var res;\r\n    var userid = await getData(\"uid\");\r\n    var raw = JSON.stringify(\r\n    {\r\n        userid: userid,\r\n        name:name,\r\n    }\r\n    );\r\n    var requestOptions = {\r\n        method: 'DELETE',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/contact/deleteContact\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result\r\n    })\r\n    getAllContacts(setContacts)\r\n    return res;\r\n}\r\n","import React from 'react';\r\nimport { View, TextInput, TouchableOpacity } from 'react-native';\r\nimport { Text, Button, Divider, IconButton } from 'react-native-paper';\r\nimport deleteContact from '../functions/deleteContact';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport getAllContacts from '../functions/getAllContacts';\r\n\r\n\r\nexport function ContactDetailsEdit({contact, list,setContacts}) {\r\n    const [name,setName] = React.useState(contact.name)\r\n    const [company,setCompany] = React.useState((contact.company != null) ? contact.company : null)\r\n\r\n    const [phoneList, setPhoneList] = React.useState(contact.phones)\r\n    const [mailList, setMailList] = React.useState((contact.emails) ? contact.emails : []);\r\n    console.log(contact)\r\n    const [addressList, setAddressList] = React.useState(contact.addresses) \r\n    \r\n    const [phoneListLength, setPhoneListLength] = React.useState(contact.phones.length)\r\n    const [mailListLength, setMailListLength] = React.useState(contact.emails ? contact.emails.length : 0)\r\n    const [addressListLength, setAddressListLength] = React.useState(contact.addresses.length)\r\n    \r\n    const navigation = useNavigation();\r\n\r\n    React.useEffect(() => {\r\n        list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n    },[])\r\n\r\n    return (\r\n        <View>\r\n            <View style={{flexDirection:\"row\",justifyContent:\"space-between\",width:\"100%\",marginTop:10}}>\r\n            </View>\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20}}>\r\n                <TextInput style={{height:50,minWidth:\"100%\"}} placeholder={\"Name\"} value={name} onChangeText={(text) => {\r\n                    setName(text);\r\n                list({name:text,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})}} \r\n                />\r\n                <Divider />\r\n                <TextInput style={{height:50,minWidth:\"100%\"}} placeholder={\"Company\"} value={company} onChangeText={(text) => {setCompany(text);\r\n                list({name:name,company:text,phones:phoneList,mails:mailList,address:addressList,contact:contact})}} />\r\n            </View>\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100%\"}}>\r\n                {[...Array(phoneListLength)].map((phone,i) => {\r\n                    return <View style={{flexDirection:\"row\",alignItems:\"center\",height:45}}>\r\n                    {\r\n                    (phoneListLength != 1) ? \r\n                    <IconButton\r\n                        icon={\"minus\"}\r\n                        iconColor=\"white\"\r\n                        size={20}\r\n                        style={{height:20,marginLeft:-3,marginRight:5,backgroundColor:\"red\",width:20}}\r\n                        onPress={() => {\r\n                            var phones = phoneList;\r\n                            phones.splice(i,1);\r\n                            setPhoneListLength(phoneListLength-1);\r\n                            setPhoneList(phones)\r\n                            list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})}}\r\n                    />  : null\r\n                    }\r\n                    <TextInput keyboardType='numeric' style={{height:50,minWidth:\"100%\"}} placeholder={\"Phone\"} value={contact.phones[i]} onChangeText={(text) => {\r\n                        var phones = phoneList;\r\n                        phones[i] = text;\r\n                        setPhoneList(phones)\r\n                        list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                    }} />\r\n                    </View>\r\n                })}\r\n                <Divider style={{height:1}}/>\r\n                <TouchableOpacity style={{flexDirection:\"row\",alignItems:\"center\",height:45}} \r\n                onPress={() => {\r\n                    setPhoneListLength(phoneListLength+1)\r\n                    list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                }}\r\n                >\r\n                <IconButton\r\n                    icon={\"plus\"}\r\n                    iconColor=\"white\"\r\n                    size={20}\r\n                    style={{height:20,marginLeft:-3,backgroundColor:\"limegreen\",width:20}}\r\n                />\r\n                <Text>Add Phone</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100%\"}}>\r\n                {[...Array(mailListLength)].map((mail,i) => {\r\n                    return <View style={{flexDirection:\"row\",alignItems:\"center\",height:45}}>\r\n                    <IconButton\r\n                        icon={\"minus\"}\r\n                        iconColor=\"white\"\r\n                        size={20}\r\n                        style={{height:20,marginLeft:-3,marginRight:5,backgroundColor:\"red\",width:20}}\r\n                        onPress={() => {\r\n                            var mails = mailList;\r\n                            mails.splice(i,1);\r\n                            setMailListLength(mailListLength-1);\r\n                            setMailList(mails)\r\n                            list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                        }}\r\n                    />\r\n                    <TextInput keyboardType='email-address' style={{height:50,minWidth:\"100%\"}} value={contact.emails[i]} placeholder={\"Mail\"} onChangeText={(text) => {\r\n                        var mails = mailList;\r\n                        mails[i] = text;\r\n                        setMailList(mails);\r\n                        list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                    }} />\r\n                <Divider />\r\n                    </View>\r\n                })}\r\n                {mailListLength != 0 ? <Divider style={{height:1}}/> : null}\r\n                <TouchableOpacity style={{flexDirection:\"row\",alignItems:\"center\",height:45}} \r\n                onPress={() => {\r\n                    setMailListLength(mailListLength+1)\r\n                    list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                }}\r\n                >\r\n                <IconButton\r\n                    icon={\"plus\"}\r\n                    iconColor=\"white\"\r\n                    size={20}\r\n                    style={{height:20,marginLeft:-3,backgroundColor:\"limegreen\",width:20}}\r\n                />\r\n                <Text>Add Mail</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={{paddingHorizontal:\"2.5%\", backgroundColor:\"white\",marginTop:20,width:\"100%\"}}>\r\n                {[...Array(addressListLength)].map((addrss,i) => {\r\n                    return <View style={{flexDirection:\"row\",alignItems:\"center\",height:45}}>\r\n                    {\r\n                    (addressListLength != 1) ? \r\n                    <IconButton\r\n                        icon={\"minus\"}\r\n                        iconColor=\"white\"\r\n                        size={20}\r\n                        style={{height:20,marginLeft:-3,marginRight:5,backgroundColor:\"red\",width:20}}\r\n                        onPress={() => {\r\n                            var address = addressList;\r\n                            address.splice(i,1);\r\n                            setAddressListLength(addressListLength-1);\r\n                            setAddressList(address);\r\n                            list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                        }}\r\n                    />  : null\r\n                    }\r\n                    <TextInput style={{height:50,minWidth:\"100%\"}} placeholder={\"Address\"} value={contact.addresses[i]} onChangeText={(text) => {\r\n                        var address = addressList;\r\n                        address[i] = text;\r\n                        setAddressList(address);\r\n                        list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                    }} />\r\n                <Divider />\r\n                    </View>\r\n                })}\r\n                {addressListLength != 0 ? <Divider style={{height:1}}/> : null}\r\n                <TouchableOpacity style={{flexDirection:\"row\",alignItems:\"center\",height:45}} \r\n                onPress={() => {\r\n                    setAddressListLength(addressListLength+1)\r\n                    list({name:name,company:company,phones:phoneList,mails:mailList,address:addressList,contact:contact})\r\n                }}\r\n                >\r\n                <IconButton\r\n                    icon={\"plus\"}\r\n                    iconColor=\"white\"\r\n                    size={20}\r\n                    style={{height:20,marginLeft:-3,backgroundColor:\"limegreen\",width:20}}\r\n                />\r\n                <Text>Add Address</Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n            <View style={{backgroundColor:\"#FFF\",paddingTop:15,paddingHorizontal:15,paddingBottom:10,marginHorizontal:10,borderRadius:10,marginTop:20}}>\r\n                <TouchableOpacity onPress={() => {\r\n                    deleteContact(contact.name,setContacts)\r\n                    navigation.goBack();\r\n                }}>\r\n                    <Text style={{color:\"red\",marginBottom:10,fontSize:18,alignSelf:\"center\"}}>Delete Contact</Text>\r\n                </TouchableOpacity>               \r\n            </View>\r\n        </View>\r\n    )\r\n}","import React from 'react';\r\nimport { Text, View, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { useRoute, useNavigation } from '@react-navigation/native';\r\nimport { IconButton, Title, ActivityIndicator, MD2Colors, Divider, Button } from 'react-native-paper';\r\nimport getContactDetails from '../functions/getContactDetails';\r\nimport { ContactDetailsEdit } from '../components/ContactDetailsEdit';\r\n\r\nexport function ContactDetailsScreen({editMode,setEditMode,setContact,contact,list,setName,name,setContacts}) {\r\n    var route = useRoute();\r\n    var navigation = useNavigation();\r\n    var params = route.params;\r\n\r\n    const [isContactsLoaded, setIsContactsLoaded] = React.useState(false);\r\n\r\n    React.useLayoutEffect(() => {\r\n        setName(params.name)\r\n        getContactDetails(setContact,setIsContactsLoaded,params.name);\r\n        setEditMode(false)\r\n    }, []);\r\n\r\n    return (\r\n        (!isContactsLoaded) ?\r\n        <View style={{ flex:1, justifyContent:\"center\" ,alignItems:\"center\", }}>\r\n            <ActivityIndicator animating={true} style={{alignSelf:\"center\"}} color={MD2Colors.red800} />\r\n        </View>\r\n        :\r\n        (editMode) ? //edit mode yapılacak\r\n        <View>\r\n            <ContactDetailsEdit setContacts={setContacts} setEditMode={setEditMode} list={list} contact={contact} />\r\n        </View> \r\n        :\r\n        <ScrollView style={{backgroundColor:\"#F3F2F7\",flex:1}}>\r\n            <View style={{alignItems:\"center\"}}>\r\n                <Title style={{color:\"black\"}}>{name}</Title>\r\n                <Text style={{marginBottom:10}}>{(contact.company != null) ? contact.company : null}</Text>\r\n            </View>\r\n            <View style={{flexDirection:\"row\",justifyContent:\"space-around\"}}>\r\n                <View style={{height:60,width:75,backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\"}}>\r\n                    <IconButton size={20}\r\n                        icon={\"message\"}\r\n                        iconColor=\"#117CDE\"\r\n                        style={{height:20,width:30}}\r\n                    />\r\n                    <Text style={{color:\"#117CDE\"}}>message</Text>\r\n                </View>\r\n                <View style={{height:60,width:75,backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <IconButton size={20}\r\n                        icon={\"phone\"}\r\n                        iconColor=\"#117CDE\"\r\n                        style={{height:20,width:30}}\r\n                    />\r\n                    <Text style={{color:\"#117CDE\"}}>call</Text>\r\n                </View>\r\n                <View style={{height:60,width:75,backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <IconButton size={20}\r\n                        icon={\"video\"}\r\n                        iconColor=\"#117CDE\"\r\n                        style={{height:20,width:30}}\r\n                    />\r\n                    <Text style={{color:\"#117CDE\"}}>video</Text>\r\n                </View>\r\n                <View style={{height:60,width:75,backgroundColor:\"white\",borderRadius:10,justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <IconButton size={20}\r\n                        icon={\"mail\"}\r\n                        iconColor=\"#117CDE\"\r\n                        style={{height:20,width:30}}\r\n                    />\r\n                    <Text style={{color:\"#117CDE\"}}>mail</Text>\r\n                </View>\r\n            </View>\r\n            <View style={{marginTop:20}}>\r\n                {contact.phones.map((value) => {\r\n                    return (\r\n                        <View style={{backgroundColor:\"#FFF\",padding:20,marginHorizontal:10,borderRadius:10,marginBottom:20}}>\r\n                            <Text style={{fontSize:20}}>phone</Text>\r\n                            <Text style={{fontSize:20,color:\"#117CDE\"}}>{value}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n            <View>\r\n                {contact.emails.map((value) => {\r\n                    return (\r\n                        <View style={{backgroundColor:\"#FFF\",padding:20,marginHorizontal:10,borderRadius:10,marginBottom:20}}>\r\n                            <Text style={{fontSize:20}}>e-mail</Text>\r\n                            <Text style={{fontSize:20,color:\"#117CDE\"}}>{value}</Text>\r\n                        </View> \r\n                    )\r\n                })}\r\n            </View>\r\n            <View>\r\n                {contact.addresses.map((value) => {\r\n                    return (\r\n                        <View style={{backgroundColor:\"#FFF\",padding:20,marginHorizontal:10,borderRadius:10,marginBottom:20}}>\r\n                            <Text style={{fontSize:20}}>address</Text>\r\n                            <Text style={{fontSize:20,color:\"#117CDE\"}}>{value}</Text>\r\n                        </View>\r\n                    )\r\n                })}\r\n            </View>\r\n            <View style={{backgroundColor:\"#FFF\",padding:15,marginHorizontal:10,borderRadius:10}}>\r\n                <TouchableOpacity>\r\n                    <Text style={{color:\"#117CDE\",marginBottom:10,fontSize:18}}>Send Message</Text>\r\n                </TouchableOpacity>\r\n                <Divider style={{height:1}} /> \r\n                <TouchableOpacity>\r\n                    <Text style={{color:\"#117CDE\",marginBottom:10,fontSize:18,marginVertical:10}}>Share Contact</Text>\r\n                </TouchableOpacity>                \r\n                <Divider style={{height:1}} /> \r\n                <TouchableOpacity>\r\n                    <Text style={{color:\"#117CDE\",marginBottom:10,fontSize:18,marginTop:10}}>Add to Favourites</Text>\r\n                </TouchableOpacity>                \r\n            </View>\r\n            <View style={{backgroundColor:\"#FFF\",paddingTop:15,paddingHorizontal:15,paddingBottom:10,marginHorizontal:10,borderRadius:10,marginVertical:20}}>\r\n                <TouchableOpacity>\r\n                    <Text style={{color:\"#117CDE\",marginBottom:10,fontSize:18}}>Add to Emergency Contacts</Text>\r\n                </TouchableOpacity>               \r\n            </View>\r\n            <View style={{backgroundColor:\"#FFF\",paddingTop:15,paddingHorizontal:15,paddingBottom:10,marginHorizontal:10,borderRadius:10}}>\r\n                <TouchableOpacity>\r\n                    <Text style={{color:\"#117CDE\",marginBottom:10,fontSize:18}}>Share My Location</Text>\r\n                </TouchableOpacity>               \r\n            </View>\r\n        </ScrollView>\r\n    )\r\n}","import { getData } from './asyncstorage';\r\n\r\nexport default async function updateContact(name,company,phones,mails,address,contact) {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var res;\r\n    var userid = await getData(\"uid\");\r\n    var raw = JSON.stringify(\r\n    {\r\n        newContact:{\r\n            user: userid,\r\n            phones:phones,\r\n            emails:mails,\r\n            company:company,\r\n            name:name,\r\n            addresses:address\r\n        },\r\n        oldName:contact.name,\r\n    }\r\n    );\r\n    var requestOptions = {\r\n        method: 'PUT',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/contact/updateContact\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result\r\n    })\r\n    return res;\r\n}\r\n","import React from 'react';\r\nimport { Button, IconButton } from 'react-native-paper';\r\nimport updateContact from '../functions/updateContact';\r\n\r\nimport { useToast } from 'react-native-toast-notifications';\r\nimport getAllContacts from '../functions/getAllContacts';\r\nimport getContactDetails from '../functions/getContactDetails';\r\n\r\nexport function ContactDetailsHeaderRight({setEditMode,editMode,list,setContacts,setName,setContact}) {\r\n    const toast = useToast()\r\n    return (\r\n            (!editMode) ? \r\n            <Button labelStyle={{fontSize:20, color:\"#117CDE\"}} onPress={() => {\r\n                setEditMode(true)\r\n            }}\r\n            >Edit</Button>\r\n            :\r\n            <Button labelStyle={{fontSize:20, color:\"#117CDE\"}} onPress={async () => {\r\n                var result = await updateContact(list.name,list.company,list.phones,list.mails,list.address,list.contact)\r\n                console.log(result)\r\n                if(result.error == true) {\r\n                        var errorString = \"\";\r\n                        result.reason.forEach(reason => {\r\n                            errorString += reason + \"\\n\"\r\n                        })\r\n                        toast.show(\"Error!\\n\\n\"+errorString, {\r\n                            type: \"danger\",\r\n                            placement: \"top\",\r\n                            duration: 2000,\r\n                            offset: 150,\r\n                            swipeEnabled:true,\r\n                            animationType: \"slide-in\",\r\n                        });\r\n                    } else {\r\n                    setName(list.name)\r\n                    getAllContacts(setContacts)\r\n                    getContactDetails(setContact,(val) => {},list.name)\r\n                    setEditMode(false);\r\n                }\r\n            }}\r\n            >Done</Button>\r\n    )\r\n}","import React from 'react';\r\nimport { Button, IconButton } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport function ContactDetailsHeaderLeft({onPress,editMode}) {\r\n    var navigation = useNavigation();\r\n    if(editMode)\r\n    return (\r\n        <Button labelStyle={{fontSize:20, color:\"#117CDE\"}} onPress={onPress}>Cancel</Button>\r\n    )\r\n    else return (\r\n        <Button labelStyle={{fontSize:20, color:\"#117CDE\"}} onPress={() => {navigation.goBack()}}>Back</Button>\r\n    )\r\n}","export default async function getRandomId(setuid) {\r\n    var requestOptions = {\r\n        method: 'GET',\r\n    };\r\n    var res;\r\n    await fetch(\"https://sechard-contacts.herokuapp.com/randomid\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        res = result;\r\n    })\r\n    setuid(res)\r\n    return res;\r\n}","\r\nexport default async function sendNewUser() {\r\n    var res;\r\n    var requestOptions = {\r\n        method: 'GET',\r\n    };\r\n\r\n    await fetch(\"http://sechard-contacts.herokuapp.com/user/adduser\", requestOptions)\r\n    .then(response => response.json())\r\n    .then(result => {\r\n        console.log(result)\r\n        res = result\r\n    })\r\n    return res;\r\n}\r\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyC_ZlSWfmlV3Y0-QKcTIkgJd95tDvNQN5U\",\r\n    authDomain: \"sechard-frontend.firebaseapp.com\",\r\n    projectId: \"sechard-frontend\",\r\n    storageBucket: \"sechard-frontend.appspot.com\",\r\n    messagingSenderId: \"1009018631640\",\r\n    appId: \"1:1009018631640:web:9df384ee43019ac175aead\",\r\n    measurementId: \"G-6SM0L1YP5F\"\r\n  };","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { ToastProvider } from 'react-native-toast-notifications';\n\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n//screens\nimport { ContactsScreen } from './src/screens/Contacts';\nimport { ContactsHeaderRight } from './src/components/ContactsHeaderRight';\nimport { ActivityIndicator, Provider, MD2Colors } from 'react-native-paper';\nimport { ContactDetailsScreen } from './src/screens/ContactDetails';\nimport { ContactDetailsHeaderRight } from './src/components/ContactDetailsHeaderRight';\nimport { ContactDetailsHeaderLeft } from './src/components/ContactDetailsHeaderLeft';\nimport { getData, setData, clearData } from './src/functions/asyncstorage';\nimport getRandomId from './src/functions/getRandomId';\nimport sendNewUser from './src/functions/sendNewUser';\n\n//firebase\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { firebaseConfig } from './config';\n\nconst Stack = createNativeStackNavigator();\n\nasync function getuid(setuid,setGotid){\n  const uid = await getData(\"uid\");\n  console.log(uid)\n  if(uid == null) {\n    var id = await getRandomId(setuid);\n    var result = await sendNewUser();\n    console.log(result)\n    await setData(\"uid\",result.user._id);\n    setGotid(true);\n  } else {\n    setuid(uid);\n    setGotid(true)\n  }\n}\n\nexport default function App() {\n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n\n\n\n  const [visible, setVisible] = React.useState(false);\n  const [editMode, setEditMode] = React.useState(false);\n  const [contacts, setContacts] = React.useState({});\n  const [contact, setContact] = React.useState({});\n  const [name, setName] = React.useState(\"\")\n  const [uid, setuid] = React.useState(null);\n  const [gotid, setGotid] = React.useState(false);\n\n  const showModal = () => setVisible(true);\n  const hideModal = () => setVisible(false);\n\n  const [list, setList] = React.useState({});\n\n  React.useLayoutEffect(() => {\n    getuid(setuid,setGotid)\n  },[])\n  \n return (!gotid) \n  ?\n  <View style={{ flex:1, justifyContent:\"center\" ,alignItems:\"center\", }}>\n    <ActivityIndicator animating={true} style={{alignSelf:\"center\"}} color={MD2Colors.red800} />\n  </View>\n  :\n    <ToastProvider>\n    <Provider>\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{\n        headerBackgroundColor:\"#FFF\",\n        headerShadowVisible:false,\n      }}>\n        <Stack.Screen name=\"Contacts\" children={props => (\n          <ContactsScreen visible={visible} uid={uid} contacts={contacts} setContacts={setContacts} onDismiss={hideModal} {...props} />\n        )}\n          options={{\n            headerRight:(props) => {\n              return <ContactsHeaderRight showModal={showModal} {...props} /> //<ContactsHeaderRight />\n            },\n            headerTitleAlign:'center',\n            headerTitleStyle:{\n              fontSize:25\n            }\n          }}\n        />\n      <Stack.Screen name=\"ContactDetails\" children={props => (\n          <ContactDetailsScreen setContacts={setContacts} editMode={editMode} name={name} contact={contact} setContact={setContact} setName={setName} list={setList} setEditMode={setEditMode} {...props} />\n        )}\n        options={{\n          headerTitle:(editMode) ? \"Edit Contact\" : \"\",\n          headerTitleAlign:\"center\",\n          headerStyle:{\n            backgroundColor:\"#F3F2F7\",\n          },\n          headerRight:(props) => {\n            return <ContactDetailsHeaderRight editMode={editMode} setContact={setContact} setName={setName} setContacts={setContacts} setEditMode={setEditMode} list={list} {...props} /> //<ContactsHeaderRight />\n          },\n          headerLeft:(props) => {\n           return <ContactDetailsHeaderLeft onPress={() => {setEditMode(false)}} editMode={editMode} {...props} />\n          }\n        }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n    </Provider>\n    </ToastProvider>\n}","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}